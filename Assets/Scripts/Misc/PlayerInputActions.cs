//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.0
//     from Assets/Scripts/Misc/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player_Default"",
            ""id"": ""5558046a-c3e2-4f34-ada7-c54c842f6763"",
            ""actions"": [
                {
                    ""name"": ""Lock_Cam"",
                    ""type"": ""Button"",
                    ""id"": ""3e964988-ea7e-4282-9e73-d86c13e33e56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.4)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""2b4d2fa8-8238-4b18-80c5-8aadea850c89"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.64)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""edfdd59d-2864-4f47-b99b-74b1726bee8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.64)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""7af40620-bc64-46a2-ad03-8a95bd2fc7b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Light_Attack.R"",
                    ""type"": ""Button"",
                    ""id"": ""b120eb52-838e-4c09-9efa-5fdc8206a980"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.4)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Light_Attack.L"",
                    ""type"": ""Button"",
                    ""id"": ""739833e8-494d-418e-bbbc-87fb72a4965a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.4)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Heavy_Attack.R"",
                    ""type"": ""Button"",
                    ""id"": ""2b0ce25d-bd62-4782-adeb-a460624baae8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Heavy_Attack.L"",
                    ""type"": ""Button"",
                    ""id"": ""7c630c54-18d6-417e-a53b-c467fa1466ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""f5d7642c-0018-49b4-b0a4-df9153f52fec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.4)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""e31cfd43-bc2e-4583-bb46-ce44819778ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Value"",
                    ""id"": ""6fde866a-0564-4f7f-833d-f9031a399879"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6d65b7bf-8c40-4c8b-9ea2-bb6955630aca"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Walk_Toggle"",
                    ""type"": ""Button"",
                    ""id"": ""cdab852f-bfc5-4e2e-88da-7ed6db0373ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a1354c61-8415-4a58-89c8-2d1bba101f01"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Lock_Cam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c131a50e-60c3-4de4-8154-c549032d651c"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Lock_Cam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e8be4c1-98df-43b6-aacf-41bb7a0b3ddd"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89b6fe01-47bc-46ae-affd-dddb5b03c930"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61359d05-e388-4e1d-b677-a87a1e9c5cb1"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b120501f-728d-49e8-82bc-a2c537f533f2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38384858-8e37-4bed-b4ca-6c8ac385cbaa"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d609a71e-0d02-4737-8a9d-8ffe9ad9434d"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5dae11af-c5ac-4020-afbd-a3a7459aed41"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Light_Attack.R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11b1c085-969a-4b2b-b051-77d325169c5a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Light_Attack.R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a7cfe68-a924-4a16-abc0-2cf9c8971dd2"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Heavy_Attack.R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41416bfd-e786-4fb9-85b7-28acf8cd5ab3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Heavy_Attack.R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b21fdece-8f6c-49b9-8e15-a28e55f83bdd"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1e95c28-d6ee-4065-baa2-c5d95e9bbce9"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6eaa02d-97a6-4e45-bb21-14e90c023cd1"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Heavy_Attack.L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""103d620e-1126-4044-86e3-50a36ac77078"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Heavy_Attack.L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da6e847b-4936-4fe5-a503-07c0fbe0fbf0"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Light_Attack.L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19dceeee-2c57-4358-bf26-85b89971eec2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Light_Attack.L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02a0aa99-9d9c-4a0a-a77f-b8feadea83b2"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1834c027-2d47-400e-8095-32a96b693b68"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1713f1c8-9beb-4f34-b4ab-87c8d4f2f788"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1885fee-2131-4d7b-a2f6-391085802844"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e501e688-4327-4bfe-84f8-0433a90b51a5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""7080b37b-2af3-4fb8-884a-1d1e4db4772c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""41095dd2-e18c-44cd-92e5-0a9a887149fa"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""8ae4ea29-7aa7-47f9-9de8-b63f48a7fcc7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""52fd6d9c-02fe-44a2-ac0d-252d300a3b08"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f0733346-9655-4332-bfe9-78cf93bbf689"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42b98cad-6154-44bb-8284-f3be3f749373"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""Walk_Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard + Mouse"",
            ""bindingGroup"": ""Keyboard + Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player_Default
        m_Player_Default = asset.FindActionMap("Player_Default", throwIfNotFound: true);
        m_Player_Default_Lock_Cam = m_Player_Default.FindAction("Lock_Cam", throwIfNotFound: true);
        m_Player_Default_Dodge = m_Player_Default.FindAction("Dodge", throwIfNotFound: true);
        m_Player_Default_Sprint = m_Player_Default.FindAction("Sprint", throwIfNotFound: true);
        m_Player_Default_Jump = m_Player_Default.FindAction("Jump", throwIfNotFound: true);
        m_Player_Default_Light_AttackR = m_Player_Default.FindAction("Light_Attack.R", throwIfNotFound: true);
        m_Player_Default_Light_AttackL = m_Player_Default.FindAction("Light_Attack.L", throwIfNotFound: true);
        m_Player_Default_Heavy_AttackR = m_Player_Default.FindAction("Heavy_Attack.R", throwIfNotFound: true);
        m_Player_Default_Heavy_AttackL = m_Player_Default.FindAction("Heavy_Attack.L", throwIfNotFound: true);
        m_Player_Default_Interact = m_Player_Default.FindAction("Interact", throwIfNotFound: true);
        m_Player_Default_Pause = m_Player_Default.FindAction("Pause", throwIfNotFound: true);
        m_Player_Default_Camera = m_Player_Default.FindAction("Camera", throwIfNotFound: true);
        m_Player_Default_Move = m_Player_Default.FindAction("Move", throwIfNotFound: true);
        m_Player_Default_Walk_Toggle = m_Player_Default.FindAction("Walk_Toggle", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player_Default
    private readonly InputActionMap m_Player_Default;
    private List<IPlayer_DefaultActions> m_Player_DefaultActionsCallbackInterfaces = new List<IPlayer_DefaultActions>();
    private readonly InputAction m_Player_Default_Lock_Cam;
    private readonly InputAction m_Player_Default_Dodge;
    private readonly InputAction m_Player_Default_Sprint;
    private readonly InputAction m_Player_Default_Jump;
    private readonly InputAction m_Player_Default_Light_AttackR;
    private readonly InputAction m_Player_Default_Light_AttackL;
    private readonly InputAction m_Player_Default_Heavy_AttackR;
    private readonly InputAction m_Player_Default_Heavy_AttackL;
    private readonly InputAction m_Player_Default_Interact;
    private readonly InputAction m_Player_Default_Pause;
    private readonly InputAction m_Player_Default_Camera;
    private readonly InputAction m_Player_Default_Move;
    private readonly InputAction m_Player_Default_Walk_Toggle;
    public struct Player_DefaultActions
    {
        private @PlayerInputActions m_Wrapper;
        public Player_DefaultActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Lock_Cam => m_Wrapper.m_Player_Default_Lock_Cam;
        public InputAction @Dodge => m_Wrapper.m_Player_Default_Dodge;
        public InputAction @Sprint => m_Wrapper.m_Player_Default_Sprint;
        public InputAction @Jump => m_Wrapper.m_Player_Default_Jump;
        public InputAction @Light_AttackR => m_Wrapper.m_Player_Default_Light_AttackR;
        public InputAction @Light_AttackL => m_Wrapper.m_Player_Default_Light_AttackL;
        public InputAction @Heavy_AttackR => m_Wrapper.m_Player_Default_Heavy_AttackR;
        public InputAction @Heavy_AttackL => m_Wrapper.m_Player_Default_Heavy_AttackL;
        public InputAction @Interact => m_Wrapper.m_Player_Default_Interact;
        public InputAction @Pause => m_Wrapper.m_Player_Default_Pause;
        public InputAction @Camera => m_Wrapper.m_Player_Default_Camera;
        public InputAction @Move => m_Wrapper.m_Player_Default_Move;
        public InputAction @Walk_Toggle => m_Wrapper.m_Player_Default_Walk_Toggle;
        public InputActionMap Get() { return m_Wrapper.m_Player_Default; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player_DefaultActions set) { return set.Get(); }
        public void AddCallbacks(IPlayer_DefaultActions instance)
        {
            if (instance == null || m_Wrapper.m_Player_DefaultActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player_DefaultActionsCallbackInterfaces.Add(instance);
            @Lock_Cam.started += instance.OnLock_Cam;
            @Lock_Cam.performed += instance.OnLock_Cam;
            @Lock_Cam.canceled += instance.OnLock_Cam;
            @Dodge.started += instance.OnDodge;
            @Dodge.performed += instance.OnDodge;
            @Dodge.canceled += instance.OnDodge;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Light_AttackR.started += instance.OnLight_AttackR;
            @Light_AttackR.performed += instance.OnLight_AttackR;
            @Light_AttackR.canceled += instance.OnLight_AttackR;
            @Light_AttackL.started += instance.OnLight_AttackL;
            @Light_AttackL.performed += instance.OnLight_AttackL;
            @Light_AttackL.canceled += instance.OnLight_AttackL;
            @Heavy_AttackR.started += instance.OnHeavy_AttackR;
            @Heavy_AttackR.performed += instance.OnHeavy_AttackR;
            @Heavy_AttackR.canceled += instance.OnHeavy_AttackR;
            @Heavy_AttackL.started += instance.OnHeavy_AttackL;
            @Heavy_AttackL.performed += instance.OnHeavy_AttackL;
            @Heavy_AttackL.canceled += instance.OnHeavy_AttackL;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Walk_Toggle.started += instance.OnWalk_Toggle;
            @Walk_Toggle.performed += instance.OnWalk_Toggle;
            @Walk_Toggle.canceled += instance.OnWalk_Toggle;
        }

        private void UnregisterCallbacks(IPlayer_DefaultActions instance)
        {
            @Lock_Cam.started -= instance.OnLock_Cam;
            @Lock_Cam.performed -= instance.OnLock_Cam;
            @Lock_Cam.canceled -= instance.OnLock_Cam;
            @Dodge.started -= instance.OnDodge;
            @Dodge.performed -= instance.OnDodge;
            @Dodge.canceled -= instance.OnDodge;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Light_AttackR.started -= instance.OnLight_AttackR;
            @Light_AttackR.performed -= instance.OnLight_AttackR;
            @Light_AttackR.canceled -= instance.OnLight_AttackR;
            @Light_AttackL.started -= instance.OnLight_AttackL;
            @Light_AttackL.performed -= instance.OnLight_AttackL;
            @Light_AttackL.canceled -= instance.OnLight_AttackL;
            @Heavy_AttackR.started -= instance.OnHeavy_AttackR;
            @Heavy_AttackR.performed -= instance.OnHeavy_AttackR;
            @Heavy_AttackR.canceled -= instance.OnHeavy_AttackR;
            @Heavy_AttackL.started -= instance.OnHeavy_AttackL;
            @Heavy_AttackL.performed -= instance.OnHeavy_AttackL;
            @Heavy_AttackL.canceled -= instance.OnHeavy_AttackL;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Walk_Toggle.started -= instance.OnWalk_Toggle;
            @Walk_Toggle.performed -= instance.OnWalk_Toggle;
            @Walk_Toggle.canceled -= instance.OnWalk_Toggle;
        }

        public void RemoveCallbacks(IPlayer_DefaultActions instance)
        {
            if (m_Wrapper.m_Player_DefaultActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer_DefaultActions instance)
        {
            foreach (var item in m_Wrapper.m_Player_DefaultActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player_DefaultActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player_DefaultActions @Player_Default => new Player_DefaultActions(this);
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard + Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IPlayer_DefaultActions
    {
        void OnLock_Cam(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnLight_AttackR(InputAction.CallbackContext context);
        void OnLight_AttackL(InputAction.CallbackContext context);
        void OnHeavy_AttackR(InputAction.CallbackContext context);
        void OnHeavy_AttackL(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnWalk_Toggle(InputAction.CallbackContext context);
    }
}
